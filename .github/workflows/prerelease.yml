name: create pre-release

on:
  pull_request:
    types:
      - closed
    branches:
      - pre-releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install wheel

      - name: Get package version
        id: version
        run: |
          echo "::set-output name=version::$(python -c "import setup; print(setup.VERSION)")"

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Create Release
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit();
            const version = "${{ steps.version.outputs.version }}";
            octokit.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${version}`,
              name: `Pre-release ${version}`,
              body: "This is the release body",
              draft: true,
              prerelease: true
            });

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: |
            ./dist/*.whl
            ./dist/*.tar.gz
